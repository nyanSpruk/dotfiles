#!/usr/bin/env sh
#YABAI STUFF

yabai -m space 1
yabai -m space 2
yabai -m space 3
yabai -m space 4
yabai -m space 5
yabai -m space 6
yabai -m space 7

yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"

# float system preferences. Most of these just diable Yabai form resizing them.
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Settings$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-Elements$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Alfred Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Disk Utility$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
yabai -m rule --add app="^Path Finder$" manage=off
yabai -m rule --add app="^TeamViewer$" sticky=off layer=above manage=off
yabai -m rule --add app="Fantastical" manage=off
yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^Shottr$" manage=off
yabai -m rule --add app="^coconutBattery$" manage=off
yabai -m rule --add app="^Python$" manage=off
yabai -m rule --add app="^Messages$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^IINA$" manage=off
yabai -m rule --add app="^Stats$" manage=off
yabai -m rule --add app="^Stats$" manage=off
yabai -m rule --add app="^kitty$" manage=off sticky=on layer=above border=off
# yabai -m rule --add app="^Spotify$" manage=off
yabai -m rule --add app="^KakaoTalk$" manage=off
yabai -m rule --add app="^KakaoTalk$" manage=off
yabai -m rule --add app="^KakaoTalk$" manage=off
yabai -m rule --add app="^Telegram$" manage=off
yabai -m rule --add app="^Flux$" manage=off
yabai -m rule --add app="^Time Out$" manage=off
yabai -m rule --add app="^console$" manage=off
yabai -m rule --add app="^Vivid$" manage=off sticky=on layer=above 
yabai -m rule --add app="^vivid$" manage=off sticky=on layer=above 

#find ~/Library/Parallels/Applications\ Menus/ -maxdepth 3 -type f | awk -F'/' '{ print $NF; }' | awk 
'{$1=$1};1' | sort | uniq | tr "\n" "\0" | xargs -0 -I{} yabai -m rule --add app="^{}\$" title=".*" 
manage=on

# Set kitty to take top 1/3 of screen

$(/Users/nik/Developer/GitHubRepos/dotfiles/yabai/scripts/kitty.sh)
osascript -e 'tell application "Finder"' -e 'set visible of process "kitty" to false' -e 'end tell'

## Some random global settings
#yabai -m config focus_follows_mouse          autoraise
#yabai -m config focus_follows_mouse          on

# New window spawns to the left if vertical split, or top if horizontal split
yabai -m config window_placement first_child

# # New window spawns to the right if vertical split, or bottom if horizontal split
# yabai -m config window_placement second_child

yabai -m config window_topmost off
#yabai -m config window_shadow float
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.00
yabai -m config active_window_opacity 1

# yabai -m config normal_window_opacity        0.97
# yabai -m config window_border                on | off

yabai -m config window_border on
yabai -m config window_border_width 4
# yabai -m config active_window_border_color 0x8000fbff
yabai -m config active_window_border_color 0x6600ccff
yabai -m config normal_window_border_color 0x00FFFFFF
yabai -m config insert_feedback_color       0x00010101

#yabai -m config insert_feedback_color        0xffd75f5f

## some other settings
yabai -m config auto_balance off
yabai -m config split_ratio 0.50
# # set mouse interaction modifier key (default: fn)
# yabai -m config mouse_modifier ctrl
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# general space settings
#yabai -m config focused_border_skip_floating  1
#yabai -m config --space 3 layout             float

## Change how yabai looks
yabai -m config layout bsp

# All Screens / Spaces
yabai -m config top_padding 6
yabai -m config bottom_padding 6
yabai -m config left_padding 6
yabai -m config right_padding 6
yabai -m config window_gap 6

yabai -m config external_bar all:40:0

# Get all spaces on display 1 and set their top padding to 48
$(yabai -m query --spaces --display 1 | jq -re '.[] | .index' | xargs -I {} bash -c "yabai -m config --space {} top_padding 6")
yabai -m config active_window_border_color 0x6600ccff

# Per Screen / Space settings
# TODO SCRIPT THAT checks how many displays are connected and sets the padding accordingly
#  yabai -m config --space 2 top_padding 48
#  yabai -m config --space 3 top_padding 48
#  yabai -m config --space 4 top_padding 12
#  yabai -m config --space 5 top_padding 12
#  yabai -m config --space 6 top_padding 12
#  yabai -m config --space 7 top_padding 12


# #Ubersicht widget bar stufss
# TODO 
# (yabai -m query --displays --display | jq '.index')
# yabai -m signal -- add event=display_added \
#  action=""

# osascript -e 'tell application "Übersicht" to set hidden of widget id "simple-bar-spaces-jsx" to false' && osascript -e 'tell application "Übersicht" to set hidden of widget id "simple-bar-data-jsx" to false'

# yabai -m signal --add event=space_changed \
# action="osascript -e 'tell application \"Übersicht\" to refresh widget id 
#  \"simple-bar-spaces-primary-jsx\"'"
# yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id 
# \"simple-bar-spaces-primary-jsx\"'"

#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id 
# \"simple-bar-spaces-secondary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id 
# \"simple-bar-spaces-secondary-jsx\"'"


echo "yabai configuration loaded.."

#END

# osascript -e 'tell application \"Übersicht\" to hide widget id 
# \"simple-bar-spaces-jsx\"'